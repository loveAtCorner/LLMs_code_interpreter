{
    "id": "cmpl-445546cb1c4c498e98096f00d4e52992",
    "object": "chat.completion",
    "created": 1720772920,
    "model": "qwen1.5-32b-chat-int4",
    "choices": [
        {
            "index": 0,
            "message": {
                "role": "assistant",
                "content": "以下是您提供的Python脚本中函数和类的名称，以及它们的功能描述，按照Markdown表格的形式呈现：\n\n| 类/函数名 | 功能描述 |\n| --- | --- |\n| `WebChatModel` | 一个基于`ChatModel`的类，用于管理聊天模型的加载、卸载和交互。 |\n| `__init__` | 初始化方法，设置`Manager`实例，`demo_mode`和`engine`，并根据`lazy_init`参数决定是否立即加载模型。 |\n| `loaded` | 属性，返回`engine`是否已加载的布尔值。 |\n| `load_model` | 生成器函数，加载模型并显示加载进度和错误消息。 |\n| `unload_model` | 生成器函数，卸载模型并显示卸载进度和错误消息。 |\n| `append` | 函数，将新的查询添加到聊天历史中，并返回更新后的聊天历史和消息列表。 |\n| `stream` | 生成器函数，处理连续的聊天交互，返回更新后的聊天历史和消息列表。 |\n| `WebChatModel.stream_chat` | 内部方法，处理聊天交互的流式生成。 |\n\n请注意，`WebChatModel`类依赖于其他类和模块，如`ChatModel`、`Manager`、`Role`、`PEFT_METHODS`等，这些依赖未在表格中详细描述。此外，`WebChatModel`类使用了一些外部库，如`json`、`os`、`numpy`、`typing`等，以及可能的`gradio`库，这取决于`is_gradio_available()`的结果。"
            },
            "logprobs": null,
            "finish_reason": "stop",
            "stop_reason": null
        }
    ],
    "usage": {
        "prompt_tokens": 1325,
        "total_tokens": 1672,
        "completion_tokens": 347
    }
}